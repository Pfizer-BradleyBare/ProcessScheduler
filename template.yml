parameters:
  name: 'Conda build job'
  vmImage: 'Ubuntu-18.04'
  conda_bld: '3.16.3'

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 360
  
  pool:
    vmImage: ${{ parameters.vmImage }}
    
  steps: 
  
  - ${{ if or(contains(parameters.vmImage, 'macOS'),contains(parameters.vmImage, 'Ubuntu')) }}:
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: 'Add conda to PATH'

  - ${{ if contains(parameters.vmImage, 'win') }}:
    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: 'Add conda to PATH'

  - ${{ if contains(parameters.vmImage, 'macOS') }}:
    - bash: |
        sudo chown -R $USER $CONDA
      displayName: 'MacOS ownership workaround'
 
  - bash: |
        conda config --set always_yes yes --set changeps1 no && \
        conda update -q conda && \
        conda info -a && \
        conda config --add channels https://conda.anaconda.org/conda-forge
    displayName: 'Conda config and info'

  - bash: |
        conda env create -n psenv -f environment.yml
    displayName: Install ProcessScheduler to a dedicated environment

  - bash: |
      source activate psenv && \
      python -c 'from processscheduler import *'
    displayName: 'Test import'

  - bash: |
      source activate psenv && \
      pytest .
    displayName: 'Run unittest suite using pytest'

  - ${{ if startsWith(parameters.name, 'Ubuntu') }}:
    - bash: |
        source activate psenv && \
        cd benchmark &&\
        mkdir output &&\
        python benchmark_dev_team.py --plot=False --logics=QF_IDL --max_time=30 > benchmark_dev_team_result.txt &&\
        python benchmark_n_queens.py --plot=False --logics=QF_UFIDL --max_time=30 > benchmark_n_queens_result.txt
      displayName: 'Run performance benchmark'

  - ${{ if startsWith(parameters.name, 'Ubuntu') }}:
    - bash: |
        source activate psenv && \
        cd benchmark &&\
        python benchmark_logics.py &&\
        cd ..
      displayName: 'Run logics benchmark'

  - ${{ if startsWith(parameters.name, 'Ubuntu') }}:
    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: '/home/vsts/work/1/s/benchmark/'
        artifactName: Benchmarks${{ parameters.name }}
      displayName: 'Publish benchmark artifact'

  - ${{ if startsWith(parameters.name, 'Ubuntu') }}:
    - bash: |
        source activate psenv && \
        coverage run -m unittest && \
        coverage report -m && \
        coverage html && \
        bash <(curl -s https://codecov.io/bash)
      displayName: 'Coverage and export to codecov (Linux py310 only)'
